<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="onComplete()">
    <s:layout><s:HorizontalLayout /></s:layout>
    <fx:Script><![CDATA[
        import com.adobe.serialization.json.JSON;

        import mx.collections.ArrayCollection;
        import mx.utils.ColorUtil;
        import mx.utils.HSBColor;
        import mx.utils.HSBColor;

        import spark.events.IndexChangeEvent;

        [Embed(source="/dahlias.json",mimeType="application/octet-stream")]
        private var Dahlias:Class;

        [Bindable] private var _dahlias:ArrayCollection;

        private var _hues:Array = new Array(360);

        private function onComplete():void {
            var dahlias:String = new Dahlias();
            var dahliasArray:Array = JSON.decode(dahlias);
            _dahlias = new ArrayCollection(dahliasArray);
            initHues();
        }

        private function initHues():void
        {
            for(var h:int = 0;h < _hues.length;h++)
            {
                _hues[h] = new Array(101);
                for(var b:int = 0;b < _hues[h].length; b++)
                {
                    _hues[h][b] = 0;
                }
            }
        }

        private function onChange(event:IndexChangeEvent):void {
            loader.load('images/'+list.selectedItem);
        }

        private function onGoClick():void {
            var bitmapData:BitmapData = new BitmapData(loader.width,  loader.height,  false);
            bitmapData.draw(loader);
            //_colors = new Object();
            //_hues = new Array(360);
            for (var x:int = 0; x < bitmapData.width; x++)
            {
                for (var y:int = 0; y < bitmapData.height; y++)
                {
                    var pixel:uint = bitmapData.getPixel(x,y);
                    var hsb:HSBColor = HSBColor.convertRGBtoHSB(pixel);

                    var bucketedHue:int = Math.floor(hsb.hue);
                    var bucketedBrightness:int = Math.floor(hsb.brightness*100);
                    _hues[bucketedHue][bucketedBrightness]++;
                }
            }
            var json:String = JSON.encode(_hues);
            output.text = json;
            drawHues(_hues);
        }

        private function drawHues(hues:Array):void
        {

            chart.graphics.clear();
            chart.graphics.beginFill(0xFFFFFF,1);
            chart.graphics.drawRect(0,0,chart.width,chart.height);
            for (var h:int = 0;h < _hues.length; h++)
            {
                var startX:int = 0;
                for(var b:int = 50;b < _hues[h].length; b++)
                {
                    var amount:int = _hues[h][b];
                    if(amount > 0)
                    {
                        var pixel:uint = HSBColor.convertHSBtoRGB(h, 1, b/100);
                        //chart.graphics.
                        //chart.graphics.lineStyle(1, pixel, 1, false);
                        chart.graphics.beginFill(pixel,1);
                        //chart.graphics.moveTo(startX, h);
                        //chart.graphics.lineTo(startX+amount, h);

                        chart.graphics.drawRect(startX,h,startX+amount,1);
                        chart.graphics.endFill();
                        startX+=amount;
                    }
                }

            }
        }

        ]]></fx:Script>
    <s:List id="list" dataProvider="{_dahlias}" width="200" height="100%" change="onChange(event)" />
    <s:VGroup width="100%" height="100%">
        <mx:SWFLoader id="loader" />
        <s:Button label="GO!" click="onGoClick()" />
        <s:Graphic id="chart" width="100%" height="360" />
        <s:TextArea id="output" width="500" height="500" />
    </s:VGroup>

</s:Application>
